---
import type { HTMLAttributes } from 'astro/types';
import type { Code } from 'astro:components';

export interface HeadingProps {
	level?: 1 | 2 | 3 | 4 | 5 | 6;
	styledAs?: 1 | 2 | 3 | 4 | 5 | 6;
	variant?: 'emphasised';
}
interface Props
	extends HeadingProps,
		HTMLAttributes<'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6'> {}

const {
	level = 2,
	styledAs,
	variant,
	class: className,
	...attrs
} = Astro.props;

const Element =
	level === 1
		? 'h1'
		: level === 2
			? 'h2'
			: level === 3
				? 'h3'
				: level === 4
					? 'h4'
					: level === 5
						? 'h5'
						: 'h6';
---

<Element
	class={`e-heading${styledAs ? ` | as-h${styledAs}` : ''}${variant ? ` e-heading--${variant}` : ''}${
		className ? ` | ${className}` : ''
	}`}
	{...attrs}
>
	<slot />
</Element>

<style lang="scss">
	.e-heading {
	}

	.e-heading--emphasised {
		position: relative;
		&:before {
			position: absolute;
			inset-block-start: calc(100% + 0.2rem);
			inset-inline-start: 0;
			block-size: 0.1em;
			inline-size: 2.4rem;
			background-color: var(--s-color-brand-primary);
			pointer-events: none;
			content: '';
		}
	}
</style>
